1. database connection, schema and schema validation (mongoose), model
2.Creating seed Router --- work as reset model
3. searching -{
    const search = req.query.search || "";
    const page =Number(req.query.page) || 1;
    const limit =Number(req.query.limit) || 5;
    const searchEx = new RegExp( ".*" + search + ".*", i);
    const filter = {
        isAdmin(field name) : { $ne : true},
        $or : [
            {name (field name) : {$regex : searchEx}},
            {email (field name) : {$regex : searchEx}},
            {phone (field name) : {$regex : searchEx}},
        ]
    }

   const options = {password(field name) : 0}(we don't see this password property)
    const users = await Users(model name).find(filter, options)
                 .limit(limit)  (pagination here)
                 .skip((page-1) * limit);
    const count = await Users.find(filter).countDocuments();(we count here how many document we have selected)             
    if(count === 0) throw createError(404 , "no user found");(my code)
    if(!users) throw createError(404 , "no user found");
    const res.status(200).json({
            message: "users were found",
            users: users (users),
            pagination :{
                totalPage : Math.ceil(count / limit),
                currentPage : page;
                previousPage : page-1 > 0 ? page - 1 : null,
                nextPage : page + 1 <= Math.ceil(count / limit) ? page + 1 : null,
            }
    })
}

